package com.tool.gui;

import com.tool.gui.cs.Actions;
import com.tool.gui.cs.ActionsConsumer;
import com.tool.utils.ExecuteUtil;
import com.tool.utils.ExifToolsUtil;
import com.tool.utils.FileUtil;
import jakarta.annotation.Nullable;
import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.function.BiConsumer;
import java.util.function.Function;
import java.util.function.Supplier;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.event.ListDataListener;

/**
 *
 * @author Česnek Michal, UNIDATAZ s.r.o.
 */
public class MenuDialog extends javax.swing.JFrame {
    

    
    /**
     * Creates new form Menu
     */
    public MenuDialog() {
        initComponents();
        setTitle("Tool "+" ("+new File("").getAbsolutePath()+")");
        setSize(new Dimension(550, 400));
        setLocationRelativeTo(null);
        
        field_Actions.addActionsConsumer(new ActionsConsumer() {
            @Override
            public void accept(Actions action) {
                if(action==null) return;
                switch (action) {
                    case RetimeByName -> {
                        ExecuteUtil.runInThread(()->viewAction_RetimeByName());
                    }
                }
            }
        });
        
        // 1. Propojení vertikálních posuvníků
        jScrollPane2.getVerticalScrollBar().setModel(jScrollPane1.getVerticalScrollBar().getModel());

        
    }

    private File[] getOperatedFiles(Actions actions){
        switch (actions) {
            case RetimeByName -> {
                return Stream.of(new File(".").listFiles())
                    .filter((f)->f.isFile())
                    .filter((f)->ExifToolsUtil.DateFormat.fileName.equals(FileUtil.removeExtension(f.getName())))
                .toArray(File[]::new);
            }
        }
        return new File[0];
    }
    
    private void viewAction_RetimeByName(){
        File[] files = getOperatedFiles(Actions.RetimeByName);
        String left = Stream.of(files).map((f)->f.getName()).collect(Collectors.joining("\n"));
        field_Left.setText(left);
        field_Left.setEditable(false);
        progressBarInit(files.length+1);
        progressBarIncrement();
        List<Supplier<Date>> suppliers = Stream.of(files).map((File file) -> ExifToolsUtil.getExIfDateTimeAsync(file)).collect(Collectors.toList());
        List<Date> dates = ExecuteUtil.runsAsync(suppliers,whenPartialComplete);
        progressBarReset();
        String right = dates.stream().map((date)->ExifToolsUtil.DateFormat.exiftool.format(date, "<unknown>")).collect(Collectors.joining("\n"));
        field_Right.setText(right);
        field_Right.setEditable(false);
    }
    
    private void sleep(Duration d){
        try {
            Thread.sleep(d);
        } catch (InterruptedException ex) {}
    }
    
    private void doAction_RetimeByName(){
        
    }

    final BiConsumer<Date, Throwable> whenPartialComplete = (Date t, Throwable u) -> {
        progressBarIncrement();
    };
    
    AtomicInteger progressBarMaxValue = new AtomicInteger(1);
    AtomicInteger progressBarValue    = new AtomicInteger(0);
    
    private void progressBarInit(int maxValue){
        progressBarMaxValue.set(maxValue);
        progressBarValue   .set(0);
        progressBarRepaint_Later();
    }
    private void progressBarIncrement(){
        progressBarValue.incrementAndGet();
        progressBarRepaint_Later();
    }
    private void progressBarReset(){
        progressBarValue.set(0);
        progressBarRepaint_Later();
    }
    
    private void progressBarRepaint_Later(){
        SwingUtilities.invokeLater(()->progressBarRepaint());
    }
    private void progressBarRepaint(){
        jProgressBar1.setMinimum(0);
        jProgressBar1.setMaximum(progressBarMaxValue.get());
        jProgressBar1.setValue  (progressBarValue.get());
        jProgressBar1.repaint();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_RetimeByName = new javax.swing.JButton();
        btn_RenameByExIfOrLastModificationTime = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        field_Left = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        field_Right = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        field_Actions = new com.tool.gui.cs.ActionsComboBox();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();

        btn_RetimeByName.setText("RetimeByName");
        btn_RetimeByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RetimeByNameActionPerformed(evt);
            }
        });

        btn_RenameByExIfOrLastModificationTime.setText("RenameByExIfOrLastModificationTime");
        btn_RenameByExIfOrLastModificationTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RenameByExIfOrLastModificationTimeActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(250);

        field_Left.setColumns(20);
        field_Left.setRows(5);
        jScrollPane1.setViewportView(field_Left);

        jSplitPane1.setLeftComponent(jScrollPane1);

        field_Right.setColumns(20);
        field_Right.setRows(5);
        jScrollPane2.setViewportView(field_Right);

        jSplitPane1.setRightComponent(jScrollPane2);

        jLabel1.setText("Akce");

        jButton1.setText("Re");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(field_Actions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(field_Actions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_RetimeByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RetimeByNameActionPerformed
        
        try (ExecutorService executor = Executors.newFixedThreadPool(Runtime.getRuntime().availableProcessors())) {
            List<CompletableFuture> futuresList = new ArrayList<>();
            for (File file : new File(".").listFiles()) {
                if(file.isDirectory()) continue;
                String fileNameWoExt = FileUtil.removeExtension(file.getName());
                //Ověříme dekodovatelnost Data z názvu souboru
                Date date = ExifToolsUtil.DateFormat.fileName.parse(fileNameWoExt);
                if(date==null) continue;
                futuresList.add(CompletableFuture.runAsync(() -> {
                    ExifToolsUtil.setExIfDateTime(file, date);
                    System.out.println("Done: "+file);
                },executor));
            }
            CompletableFuture<Void> futures = CompletableFuture.allOf(futuresList.toArray(CompletableFuture[]::new));
            futures.join();
        }
        
    }//GEN-LAST:event_btn_RetimeByNameActionPerformed

    private void btn_RenameByExIfOrLastModificationTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RenameByExIfOrLastModificationTimeActionPerformed
        
        for (File file : new File(".").listFiles()) {
            if(file.isDirectory()) continue;
            ExifToolsUtil.FileType fileType = ExifToolsUtil.FileType.getFileType(file);
            if(!fileType.isMedia()) continue;
            Date date = ExifToolsUtil.getExIfDateTime(file);
            if(date==null) continue;
            String newFileName = ExifToolsUtil.DateFormat.fileName.format(date)+"."+FileUtil.getExtension(file.getName());
            if(file.getName().equals(newFileName)) continue;
            try {
                Files.move(file.toPath(), Paths.get(file.getParent(), newFileName), StandardCopyOption.REPLACE_EXISTING);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_btn_RenameByExIfOrLastModificationTimeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        field_Actions.fireActionsConsumers();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            ex.printStackTrace();
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MenuDialog().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_RenameByExIfOrLastModificationTime;
    private javax.swing.JButton btn_RetimeByName;
    private com.tool.gui.cs.ActionsComboBox field_Actions;
    private javax.swing.JTextArea field_Left;
    private javax.swing.JTextArea field_Right;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    // End of variables declaration//GEN-END:variables
}
